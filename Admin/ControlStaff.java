/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Fatih
 */
public class ControlStaff extends javax.swing.JFrame {
    
    ArrayList<StaffData> Staffdata;
    String header[] = new String[]{"ID", "Nama", "Address", "City", "Phone"};
    DefaultTableModel defaultTableModel;
    int row, col;
     

    /**
     * Creates new form ControlStaff
     */
    public ControlStaff() {
        initComponents();
        Staffdata = new ArrayList<>();
        defaultTableModel = new DefaultTableModel(header,0);
        TableStaff.setModel(defaultTableModel);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCalendar1 = new com.toedter.calendar.JCalendar();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        iconStaff = new javax.swing.JLabel();
        labelStaff = new javax.swing.JLabel();
        BacktoAdmin = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        AddUser = new javax.swing.JButton();
        UpdateUser = new javax.swing.JButton();
        DeleteUser = new javax.swing.JButton();
        NameLabel = new javax.swing.JLabel();
        AddrLabel = new javax.swing.JLabel();
        NIKLabel = new javax.swing.JLabel();
        StaffName = new javax.swing.JTextField();
        AddressStaff = new javax.swing.JTextField();
        NIKField = new javax.swing.JTextField();
        ScrollPanel = new javax.swing.JScrollPane();
        TableStaff = new javax.swing.JTable();
        Save = new javax.swing.JButton();
        OpenFile = new javax.swing.JButton();
        CityLabel = new javax.swing.JLabel();
        CityStaff = new javax.swing.JTextField();
        PhoneLabel = new javax.swing.JLabel();
        PhoneStaff = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(550, 600));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        iconStaff.setIcon(new javax.swing.ImageIcon("D:\\belajar\\GUIDemo\\src\\asset\\service.png")); // NOI18N

        labelStaff.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelStaff.setText("Staff Data");

        BacktoAdmin.setText("Back");
        BacktoAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BacktoAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(iconStaff)
                .addGap(167, 167, 167)
                .addComponent(labelStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BacktoAdmin)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(iconStaff, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelStaff, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BacktoAdmin)))
                .addGap(19, 19, 19))
        );

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        AddUser.setText("Add");
        AddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddUserActionPerformed(evt);
            }
        });

        UpdateUser.setText("Update");
        UpdateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateUserActionPerformed(evt);
            }
        });

        DeleteUser.setText("Delete");
        DeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(AddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(UpdateUser, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(DeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdateUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        NameLabel.setText("Name");

        AddrLabel.setText("Address");

        NIKLabel.setText("NIK");

        NIKField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NIKFieldActionPerformed(evt);
            }
        });

        TableStaff.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIK", "Nama", "Address", "City", "Phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableStaff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableStaffMouseClicked(evt);
            }
        });
        ScrollPanel.setViewportView(TableStaff);
        if (TableStaff.getColumnModel().getColumnCount() > 0) {
            TableStaff.getColumnModel().getColumn(0).setMaxWidth(30);
            TableStaff.getColumnModel().getColumn(1).setMaxWidth(150);
            TableStaff.getColumnModel().getColumn(2).setMaxWidth(200);
            TableStaff.getColumnModel().getColumn(3).setMaxWidth(80);
            TableStaff.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        OpenFile.setText("Open");
        OpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenFileActionPerformed(evt);
            }
        });

        CityLabel.setText("City");

        PhoneLabel.setText("Phone");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NameLabel)
                            .addComponent(AddrLabel)
                            .addComponent(NIKLabel)
                            .addComponent(CityLabel)
                            .addComponent(PhoneLabel))
                        .addGap(85, 85, 85)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(StaffName)
                            .addComponent(AddressStaff, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(NIKField)
                            .addComponent(CityStaff)
                            .addComponent(PhoneStaff))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(OpenFile, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NIKField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NIKLabel))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(StaffName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddressStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddrLabel))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CityStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CityLabel))
                        .addGap(48, 48, 48))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PhoneStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PhoneLabel))))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OpenFile, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BacktoAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BacktoAdminActionPerformed
        // TODO add your handling code here:
        dispose();
        AdminPage backAdmin = new AdminPage();
        backAdmin.setVisible(true);
    }//GEN-LAST:event_BacktoAdminActionPerformed

    private void AddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddUserActionPerformed
        // TODO add your handling code here:
        String name = StaffName.getText();
        int NIK = Integer.parseInt(NIKField.getText());
        String address = AddressStaff.getText();
        String city = CityStaff.getText();
        int phone = Integer.parseInt(PhoneStaff.getText());
        StaffData dataStaff = new StaffData(NIK, name, address, city, phone);
        Staffdata.add(dataStaff);
         defaultTableModel.setRowCount(0);
         for(int i = 0; i < Staffdata.size() ; i ++){
            Object[] obj = {
                Staffdata.get(i).id, 
                Staffdata.get(i).nama,
                Staffdata.get(i).address,
                Staffdata.get(i).city,
                Staffdata.get(i).phone   
                    
            };
            defaultTableModel.addRow(obj);
        }
         JOptionPane.showMessageDialog(null,"Data Added"); 
         clearField();
    }//GEN-LAST:event_AddUserActionPerformed

    
    
    private void TableStaffMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableStaffMouseClicked
        // TODO add your handling code here:
        row = TableStaff.getSelectedRow();
        col = TableStaff.getColumnCount();
        NIKField.setText(defaultTableModel.getValueAt(row,0).toString());
        StaffName.setText(defaultTableModel.getValueAt(row,1).toString());
        AddressStaff.setText(defaultTableModel.getValueAt(row,2).toString());
        CityStaff.setText(defaultTableModel.getValueAt(row,3).toString());
        PhoneStaff.setText(defaultTableModel.getValueAt(row,4).toString());
    }//GEN-LAST:event_TableStaffMouseClicked

    private void UpdateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateUserActionPerformed
        // TODO add your handling code here:
        String Updatenama = StaffName.getText();
        int UpdateNIK = Integer.parseInt(NIKField.getText());
        String Updateaddress = AddressStaff.getText();
        String Updatecity = CityStaff.getText();
        int Updatephone = Integer.parseInt(PhoneStaff.getText());
        Staffdata.get(row).id = UpdateNIK;
        Staffdata.get(row).nama = Updatenama;
        Staffdata.get(row).address = Updateaddress;
        Staffdata.get(row).phone = Updatephone;
        Staffdata.get(row).city = Updatecity;
        defaultTableModel.setRowCount(0);
        for(int i = 0; i < Staffdata.size() ; i ++){
            Object[] obj = {
                Staffdata.get(i).id, 
                Staffdata.get(i).nama,
                Staffdata.get(i).address,
                Staffdata.get(i).city,
                Staffdata.get(i).phone     
            };
            defaultTableModel.addRow(obj);
        }
        JOptionPane.showMessageDialog(null,"Data Updated"); 
        clearField();
    }//GEN-LAST:event_UpdateUserActionPerformed

    private void DeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteUserActionPerformed
        // TODO add your handling code here:
         int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Delete This Data", "Delete", dialogButton);
        if(dialogButton == 0){
            defaultTableModel.removeRow(row);
            Staffdata.remove(row);
            defaultTableModel.setRowCount(0);
            for(int i = 0; i < Staffdata.size(); i++){
                Object[] obj = {
                    Staffdata.get(i).id, 
                    Staffdata.get(i).nama, 
                    Staffdata.get(i).address,
                    Staffdata.get(i).city,
                    Staffdata.get(i).phone   
                };
                defaultTableModel.addRow(obj);
            }
            clearField();
        }else{
            
        }
    }//GEN-LAST:event_DeleteUserActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // TODO add your handling code here:
         JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file save");
        int userSelection = fileChooser.showSaveDialog(this);
        if(userSelection == JFileChooser.APPROVE_OPTION){
            File fileToSave = fileChooser.getSelectedFile();
            //lets write to file
         
            try {
                 FileWriter fw = new FileWriter(fileToSave);
                BufferedWriter bw = new BufferedWriter(fw);
                for (int i = 0; i < TableStaff.getRowCount(); i++) {
                    for (int j = 0; j < TableStaff.getColumnCount(); j++) {
                        //write
                        bw.write(TableStaff.getValueAt(i, j).toString()+" ");
                    }
                    bw.newLine();//record per line 
                }
                JOptionPane.showMessageDialog(this, "SUCCESSFULLY LOADED","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
                bw.close();
                fw.close();
            } catch (IOException ex) {
               JOptionPane.showMessageDialog(this, "ERROR","ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);
            }
            
        }

        
    }//GEN-LAST:event_SaveActionPerformed

    private void OpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenFileActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify to Open");
        int userSelection = fileChooser.showSaveDialog(this);
        if(userSelection == JFileChooser.APPROVE_OPTION){
        File fileToOpen = fileChooser.getSelectedFile();
        
        try{
            FileReader filereader = new FileReader(fileToOpen);
             BufferedReader bufferedReader = new BufferedReader(filereader);
             
             DefaultTableModel model = (DefaultTableModel)TableStaff.getModel();
             Object[] tableLine = bufferedReader.lines().toArray();
             
            for (Object tableLine1 : tableLine) {
                String[] dataRow = tableLine1.toString().split(" ");
                model.addRow(dataRow);
            }
        }catch(IOException e){
             JOptionPane.showMessageDialog(this, "ERROR","ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);
        }
       }
    }//GEN-LAST:event_OpenFileActionPerformed

    private void NIKFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NIKFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NIKFieldActionPerformed

    private void clearField(){
       StaffName.setText("");
       NIKField.setText("");
       AddressStaff.setText("");
       CityStaff.setText("");
       PhoneStaff.setText("");
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControlStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControlStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControlStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControlStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ControlStaff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddUser;
    private javax.swing.JLabel AddrLabel;
    private javax.swing.JTextField AddressStaff;
    private javax.swing.JButton BacktoAdmin;
    private javax.swing.JLabel CityLabel;
    private javax.swing.JTextField CityStaff;
    private javax.swing.JButton DeleteUser;
    private javax.swing.JTextField NIKField;
    private javax.swing.JLabel NIKLabel;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JButton OpenFile;
    private javax.swing.JLabel PhoneLabel;
    private javax.swing.JTextField PhoneStaff;
    private javax.swing.JButton Save;
    private javax.swing.JScrollPane ScrollPanel;
    private javax.swing.JTextField StaffName;
    private javax.swing.JTable TableStaff;
    private javax.swing.JButton UpdateUser;
    private javax.swing.JLabel iconStaff;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel labelStaff;
    // End of variables declaration//GEN-END:variables
}
